{"name":"Chatstats","tagline":"Generates statistics for a chat room, especially IRC channels.","body":"chatstats\r\n=========\r\n\r\nchatstats is a tool for generating HTML statistics from the logs from some kind\r\nof chat room (generally an IRC channel). Ultimately, it is intended to be\r\nsimilar to the following projects:\r\n\r\n* [IRCStats](http://humdi.net/ircstats/)\r\n* [mIRCStats](http://www.nic.fi/~mauvinen/mircstats/)\r\n* [pisg](http://pisg.sourceforge.net/)\r\n\r\nchatstats is currently nowhere near as powerful as any of these other solutions,\r\nso feel free to try them out.\r\n\r\nUsage\r\n-----\r\n\r\n`chatstats [OPTION...] [COMMAND] [COMMAND-PARAMETERS]...`\r\n\r\n### Commands\r\n\r\nThe heart of chatstats is the set of various commands it understands. Several\r\ncommands are either remnants of earlier development or built for more esoteric\r\npurposes, while the `generate` command is the primary one used for generating\r\nHTML statistics. Nonetheless, the following commands are currently available:\r\n\r\n#### `convert`\r\n\r\n`convert [INPUT-DIRECTORY] [OUTPUT-DIRECTORY]`\r\n\r\nConverts the logs in the given input directory into chatstats' native format.\r\nThe given output directory must not already exist (as a safety precaution).\r\n\r\n#### `count`\r\n\r\n`count [INPUT-DIRECTORY]`\r\n\r\nCounts and lists the number of lines (taken as the number of messages plus the\r\nnumber of actions) on each day for the set of log files in the given input\r\ndirectory.\r\n\r\n#### `coverage`\r\n\r\n`coverage [INPUT-DIRECTORY]`\r\n\r\nDisplays coverage statistics for the logs in the given input directory. That is,\r\nit reports on how complete the logs are (as a percentage of the total time\r\nspanned) and also displays some of the largest gaps in coverage.\r\n\r\n#### `frequency`\r\n\r\n`frequency [INPUT-DIRECTORY] [TARGET]`\r\n\r\nFinds words in logs in the given input directory that occur roughly as often as\r\nspecified by the target period (in seconds). It excludes words that ever have\r\na gap longer than eight times the given period, and ranks the remaining words by\r\ntheir difference to the target. (This command is more esoteric, used for finding\r\nsuitable words for a secret word game.)\r\n\r\n#### `generate`\r\n\r\n`generate [INPUT-DIRECTORY] [OUTPUT-DIRECTORY]`\r\n\r\nGenerates HTML statistics for the logs in the given input directory and writes\r\nthe HTML files to the given output directory. The output directory must not\r\nalready exist. The generated HTML files assume that\r\n[Blueprint](http://www.blueprintcss.org/) is available in the `css/blueprint`\r\ndirectory, so you should add these files after the HTML is generated.\r\n\r\n### Options\r\n\r\nThese are the available options:\r\n\r\n#### `--debug`\r\n\r\nThis option prints out a debug report to help identify important nicknames that\r\nhave not been explicitly assigned to a user in the users file.\r\n\r\n#### `--separate-userhosts`\r\n\r\nTells chatstats to separate users by the full nick!user@host specification,\r\nrather than merely by nick. In cases where the hostname is indeterminable, the\r\nresultant user will have a description of <nick>!@.\r\n\r\nThis option is best used in conjunction with a nick configuration file\r\nspecifying users and their nicks or userhosts. Explicitly declared users will\r\ndisplay by their alias (if defined) or by their most used nick.\r\n\r\n#### `--input-format`\r\n\r\nThis option controls the format the input logs are in. chatstats currently\r\nsupports two input formats:\r\n\r\n##### chatstats\r\n\r\nThe native log format of chatstats. At this time, chatstats is the only software\r\nthat outputs this format. It is designed to be excellent for maintaining\r\naccurate logs.\r\n\r\n##### mirc\r\n\r\nThe log format generated by some versions of [mIRC](http://www.mirc.com).\r\nchatstats should have no trouble reading this format, but it may report a large\r\nnumber of useless lines as being unrecognized, due to limited testing on logs\r\nactually generated by mIRC.\r\n\r\nCertain versions of mIRC generated logs that did not adequately distinguish\r\nbetween actions and joins, parts, quits, and other events. These logs are not\r\ncurrently supported, but support for them can be added on request.\r\n\r\n#### `--users-file`\r\n\r\nThis option allows the user to specify a file to control manually linking\r\nnicknames for statistics purposes. The file currently supports two directives:\r\n\r\n##### `USER`\r\n\r\nDeclares a new user. Subsequent directives will apply to this user, until\r\nanother `USER` directive is encountered. An optional alias for the user may be\r\nspecified after `USER` and a single tab or space.\r\n\r\n##### `NICK`\r\n\r\nAssigns nicknames to the most recently declared user. Accepts any number of\r\nnicknames, separated by tabs or spaces. Multiple `NICK` directives are allowed.\r\n\r\nAn extended nickname syntax is available to restrict nickname linkages to\r\nspecific date or time ranges or specific user/host combinations. This is useful\r\nif two different users used the same nickname at different points in time. (This\r\nis most useful on logs spanning many years, where nicknames may be potentially\r\nreused after some time.) It's also useful for linking a large number of\r\nnicknames used by a single unique user/host combination. The syntax is as\r\nfollows:\r\n\r\n`<nickname>!<user>@<host>#<start_date>/<end_date>+<start_time>/<end_time>`\r\n\r\nA complete example is `Joe!*@*.com#2002-10-03/2004-11-01@00:00:00/12:00:00`.\r\nThis would capture events from a user named Joe connecting from a .com hostname,\r\noccurring from 2002-10-03 up to 2004-11-01 (but not including 2004-11-01),\r\noccurring from midnight to noon. The date and time sections are completely\r\nindependent and tested separately.\r\n\r\nLinking based on user/host combinations is limited based on the completeness of\r\nthe logs used. Since hosts are generally not available on each line in logs,\r\nthis information must be inferred from join and nick change events.\r\n\r\nAll fields are optional, but the delimiters are required if using the extended\r\nsyntax. The dates must be in YYYY-MM-DD format, and the times must be in\r\nHH:MM:SS format. You may use either the hostname extended section, the time\r\nrange extended section, or both.\r\n\r\nTwo different wildcard operators are supported: `*` and `?`. `*` matches zero\r\nor more characters, and `?` matches a single optional character.\r\n\r\nBugs and Feature Requests\r\n-------------------------\r\n\r\nPlease submit bug reports or feature requests to the issue tracker at the\r\n[chatstats GitHub page](https://github.com/aexoden/chatstats).\r\n\r\nIf requesting support for a new log format, or reporting a bug in an existing\r\nformat, please submit a log sample in your report. The more complete the sample,\r\nthe better. (Rarer event types such as channel CTCPs or channel notices are\r\nrecommended to be included.)\r\n\r\nLicense\r\n-------\r\n\r\nchatstats is licensed under the\r\n[MIT license](http://opensource.org/licenses/MIT).\r\n\r\nInstallation\r\n------------\r\n\r\nchatstats has the following dependencies:\r\n\r\n* [GCC 4.6+](http://www.gcc.org)\r\n* [glibmm 2.28](http://www.gtkmm.org)\r\n* [tup](http://gittup.org/tup/)\r\n* [SQLite 3+](http://www.sqlite.org)\r\n\r\nTo build chatstats, ensure dependencies are installed, change to the directory\r\ncontaining the chatstats sources, and execute `./build`. chatstats should be\r\nsuccessfully built. There is currently no installation procedure, but the binary\r\nis self-contained, so you should be able to copy it to any standard binary\r\nlocation.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}